#if !canImport(ObjectiveC)
import XCTest

extension BoundableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BoundableTests = [
        ("testBoundaryAllTypes", testBoundaryAllTypes),
        ("testBoundaryLine", testBoundaryLine),
    ]
}

extension EnvelopeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EnvelopeTests = [
        ("testGeometry", testGeometry),
        ("testGeometryWhenExpectingAPoint", testGeometryWhenExpectingAPoint),
        ("testMaxXMaxY", testMaxXMaxY),
        ("testMaxXMinY", testMaxXMinY),
        ("testMinXMaxY", testMinXMaxY),
        ("testMinXMinY", testMinXMinY),
    ]
}

extension FeatureCollectionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FeatureCollectionTests = [
        ("testInitWithFeatures", testInitWithFeatures),
    ]
}

extension FeatureCollection_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FeatureCollection_CodableTests = [
        ("testCodable", testCodable),
        ("testDecodableThrowsWithInvalidType", testDecodableThrowsWithInvalidType),
        ("testDecodableThrowsWithTypeMismatch", testDecodableThrowsWithTypeMismatch),
    ]
}

extension FeatureTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FeatureTests = [
        ("testInitWithDefaultValues", testInitWithDefaultValues),
        ("testInitWithGeometryPropertiesId", testInitWithGeometryPropertiesId),
        ("testUntypedProperties", testUntypedProperties),
    ]
}

extension Feature_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Feature_CodableTests = [
        ("testCodableWithNils", testCodableWithNils),
        ("testCodableWithNumberId", testCodableWithNumberId),
        ("testCodableWithStringId", testCodableWithStringId),
        ("testDecodableThrowsWithInvalidFeatureId", testDecodableThrowsWithInvalidFeatureId),
        ("testDecodableThrowsWithInvalidType", testDecodableThrowsWithInvalidType),
        ("testDecodableThrowsWithTypeMismatch", testDecodableThrowsWithTypeMismatch),
    ]
}

extension Feature_FeatureIdTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Feature_FeatureIdTests = [
        ("testInitWithFloatLiteral", testInitWithFloatLiteral),
        ("testInitWithIntegerLiteral", testInitWithIntegerLiteral),
        ("testInitWithStringLiteral", testInitWithStringLiteral),
    ]
}

extension GEOSContextTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GEOSContextTests = [
        ("testCapturesErrorMessages", testCapturesErrorMessages),
    ]
}

extension GEOSObjectTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GEOSObjectTests = [
        ("testInitWithContext", testInitWithContext),
        ("testInitWithParent", testInitWithParent),
        ("testTypeGeometryCollection", testTypeGeometryCollection),
        ("testTypeLinearRing", testTypeLinearRing),
        ("testTypeLineString", testTypeLineString),
        ("testTypeMultiLineString", testTypeMultiLineString),
        ("testTypeMultiPoint", testTypeMultiPoint),
        ("testTypeMultiPolygon", testTypeMultiPolygon),
        ("testTypePoint", testTypePoint),
        ("testTypePolygon", testTypePolygon),
    ]
}

extension GeoJSON_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GeoJSON_CodableTests = [
        ("testCodableFeature", testCodableFeature),
        ("testCodableFeatureCollection", testCodableFeatureCollection),
        ("testCodableGeometry", testCodableGeometry),
        ("testDecodableThrowsWithInvalidType", testDecodableThrowsWithInvalidType),
    ]
}

extension GeometryCollectionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GeometryCollectionTests = [
        ("testInitWithGeometries", testInitWithGeometries),
    ]
}

extension GeometryCollection_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GeometryCollection_CodableTests = [
        ("testCodable", testCodable),
        ("testCodableWithRecursion", testCodableWithRecursion),
        ("testDecodableThrowsWithInvalidType", testDecodableThrowsWithInvalidType),
        ("testDecodableThrowsWithTypeMismatch", testDecodableThrowsWithTypeMismatch),
    ]
}

extension GeometryCollection_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GeometryCollection_GEOSTests = [
        ("testInitFromWrongGEOSType", testInitFromWrongGEOSType),
        ("testRoundtripToGEOS", testRoundtripToGEOS),
    ]
}

extension GeometryConvertibleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GeometryConvertibleTests = [
        ("testGeometryCollectionGeometry", testGeometryCollectionGeometry),
        ("testGeometryGeometry", testGeometryGeometry),
        ("testLineStringGeometry", testLineStringGeometry),
        ("testMultiLineStringGeometry", testMultiLineStringGeometry),
        ("testMultiPointGeometry", testMultiPointGeometry),
        ("testMultiPolygonGeometry", testMultiPolygonGeometry),
        ("testPointGeometry", testPointGeometry),
        ("testPolygon_LinearRingGeometry", testPolygon_LinearRingGeometry),
        ("testPolygonGeometry", testPolygonGeometry),
    ]
}

extension GeometryConvertible_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GeometryConvertible_GEOSTests = [
        ("testAreaAllTypes", testAreaAllTypes),
        ("testAreaOfPolygon", testAreaOfPolygon),
        ("testBufferAllTypes", testBufferAllTypes),
        ("testCentroidAllTypes", testCentroidAllTypes),
        ("testCentroidPolygon", testCentroidPolygon),
        ("testContainsAllPairs", testContainsAllPairs),
        ("testContainsPolygonAndPoints", testContainsPolygonAndPoints),
        ("testConvexHullAllTypes", testConvexHullAllTypes),
        ("testConvexHullPolygon", testConvexHullPolygon),
        ("testCoversAllPairs", testCoversAllPairs),
        ("testCoversPointsAndPolygon", testCoversPointsAndPolygon),
        ("testCrossesAllPairs", testCrossesAllPairs),
        ("testCrossesBetweenLineStrings", testCrossesBetweenLineStrings),
        ("testDifferenceAllPairs", testDifferenceAllPairs),
        ("testDifferencePolygons", testDifferencePolygons),
        ("testDistanceAllPairs", testDistanceAllPairs),
        ("testDistanceBetweenPoints", testDistanceBetweenPoints),
        ("testEnvelopeAllTypes", testEnvelopeAllTypes),
        ("testEnvelopeWhenItIsAPoint", testEnvelopeWhenItIsAPoint),
        ("testEnvelopeWhenItIsAPolygon", testEnvelopeWhenItIsAPolygon),
        ("testIntersectionAllPairs", testIntersectionAllPairs),
        ("testIntersectionBetweenLineAndPoly", testIntersectionBetweenLineAndPoly),
        ("testIntersectsAllPairs", testIntersectsAllPairs),
        ("testIntersectsBetweenPoints", testIntersectsBetweenPoints),
        ("testIsCoveredByAllPairs", testIsCoveredByAllPairs),
        ("testIsCoveredByPointsAndPolygon", testIsCoveredByPointsAndPolygon),
        ("testIsDisjointAllPairs", testIsDisjointAllPairs),
        ("testIsDisjointBetweenPoints", testIsDisjointBetweenPoints),
        ("testIsTopologicallyEquivalentAllPairs", testIsTopologicallyEquivalentAllPairs),
        ("testIsTopologicallyEquivalentBetweenPoints", testIsTopologicallyEquivalentBetweenPoints),
        ("testIsWithinAllPairs", testIsWithinAllPairs),
        ("testIsWithinPolygonAndPoints", testIsWithinPolygonAndPoints),
        ("testLength_Collections", testLength_Collections),
        ("testLength_Lines", testLength_Lines),
        ("testLength_Points", testLength_Points),
        ("testLength_Polygons", testLength_Polygons),
        ("testMinimumRotatedRectangleAllTypes", testMinimumRotatedRectangleAllTypes),
        ("testMinimumRotatedRectangleLineAndPoint", testMinimumRotatedRectangleLineAndPoint),
        ("testMinimumWidthAllTypes", testMinimumWidthAllTypes),
        ("testMinimumWidthLine", testMinimumWidthLine),
        ("testNearestPointsAllPairs", testNearestPointsAllPairs),
        ("testNearestPointsBetweenPolygonAndLine", testNearestPointsBetweenPolygonAndLine),
        ("testOverlapsAllPairs", testOverlapsAllPairs),
        ("testOverlapsLines", testOverlapsLines),
        ("testPointOnSurfaceAllTypes", testPointOnSurfaceAllTypes),
        ("testPointOnSurfacePolygon", testPointOnSurfacePolygon),
        ("testRelateAllPairs", testRelateAllPairs),
        ("testRelateBetweenPoints", testRelateBetweenPoints),
        ("testRelateInvalidMask", testRelateInvalidMask),
        ("testRelateMaskAllPairs", testRelateMaskAllPairs),
        ("testRelateMaskBetweenPoints", testRelateMaskBetweenPoints),
        ("testTouchesAllPairs", testTouchesAllPairs),
        ("testTouchesPointsAndPolygon", testTouchesPointsAndPolygon),
        ("testUnaryUnionAllTypes", testUnaryUnionAllTypes),
        ("testUnaryUnionCollectionOfTwoPolygons", testUnaryUnionCollectionOfTwoPolygons),
        ("testUnionAllPairs", testUnionAllPairs),
        ("testUnionPointAndLine", testUnionPointAndLine),
        ("testUnionTwoPolygons", testUnionTwoPolygons),
    ]
}

extension Geometry_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Geometry_CodableTests = [
        ("testCodableGeometryCollection", testCodableGeometryCollection),
        ("testCodableLineString", testCodableLineString),
        ("testCodableMultiLineString", testCodableMultiLineString),
        ("testCodableMultiPoint", testCodableMultiPoint),
        ("testCodableMultiPolygon", testCodableMultiPolygon),
        ("testCodablePoint", testCodablePoint),
        ("testCodablePolygon", testCodablePolygon),
        ("testDecodingFeature", testDecodingFeature),
        ("testDecodingFeatureCollection", testDecodingFeatureCollection),
        ("testDecodingInvalidType", testDecodingInvalidType),
    ]
}

extension Geometry_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Geometry_GEOSTests = [
        ("testInitWithGEOSLinearRing", testInitWithGEOSLinearRing),
        ("testRoundtripToGEOS", testRoundtripToGEOS),
    ]
}

extension JSONTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JSONTests = [
        ("testInitWithArrayLiteral", testInitWithArrayLiteral),
        ("testInitWithBooleanLiteral", testInitWithBooleanLiteral),
        ("testInitWithDictionaryLiteral", testInitWithDictionaryLiteral),
        ("testInitWithFloatLiteral", testInitWithFloatLiteral),
        ("testInitWithIntegerLiteral", testInitWithIntegerLiteral),
        ("testInitWithNilLiteral", testInitWithNilLiteral),
        ("testInitWithStringLiteral", testInitWithStringLiteral),
        ("testUntypedValue", testUntypedValue),
    ]
}

extension JSON_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JSON_CodableTests = [
        ("testCodable", testCodable),
    ]
}

extension LineStringConvertibleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LineStringConvertibleTests = [
        ("testLineStringLineString", testLineStringLineString),
        ("testPolygon_LinearRingLineString", testPolygon_LinearRingLineString),
    ]
}

extension LineStringConvertible_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LineStringConvertible_GEOSTests = [
        ("testDistanceFromStartToProjectionOfPoint_LinearRing", testDistanceFromStartToProjectionOfPoint_LinearRing),
        ("testDistanceFromStartToProjectionOfPoint_LineString", testDistanceFromStartToProjectionOfPoint_LineString),
        ("testInterpolatedPointWithDistance_LinearRing", testInterpolatedPointWithDistance_LinearRing),
        ("testInterpolatedPointWithDistance_LineString", testInterpolatedPointWithDistance_LineString),
        ("testInterpolatedPointWithFraction_LinearRing", testInterpolatedPointWithFraction_LinearRing),
        ("testInterpolatedPointWithFraction_LineString", testInterpolatedPointWithFraction_LineString),
        ("testNormalizedDistanceFromStartToProjectionOfPoint", testNormalizedDistanceFromStartToProjectionOfPoint),
        ("testNormalizedDistanceFromStartToProjectionOfPoint_LinearRing", testNormalizedDistanceFromStartToProjectionOfPoint_LinearRing),
        ("testNormalizedDistanceFromStartToProjectionOfPointLineLengthZero_LinearRing", testNormalizedDistanceFromStartToProjectionOfPointLineLengthZero_LinearRing),
        ("testNormalizedDistanceFromStartToProjectionOfPointLineLengthZero_LineString", testNormalizedDistanceFromStartToProjectionOfPointLineLengthZero_LineString),
    ]
}

extension LineStringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LineStringTests = [
        ("testFirstAndLastPoint", testFirstAndLastPoint),
        ("testInitWithEnoughPoints", testInitWithEnoughPoints),
        ("testInitWithLinearRing", testInitWithLinearRing),
        ("testInitWithTooFewPoints", testInitWithTooFewPoints),
    ]
}

extension LineString_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LineString_CodableTests = [
        ("testCodable", testCodable),
        ("testDecodableThrowsWithInvalidType", testDecodableThrowsWithInvalidType),
        ("testDecodableThrowsWithTypeMismatch", testDecodableThrowsWithTypeMismatch),
    ]
}

extension LineString_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LineString_GEOSTests = [
        ("testInitFromWrongGEOSType", testInitFromWrongGEOSType),
        ("testRoundtripToGEOS", testRoundtripToGEOS),
    ]
}

extension MultiLineStringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultiLineStringTests = [
        ("testInitWithLineStrings", testInitWithLineStrings),
    ]
}

extension MultiLineString_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultiLineString_CodableTests = [
        ("testCodable", testCodable),
        ("testDecodableThrowsWithInvalidType", testDecodableThrowsWithInvalidType),
        ("testDecodableThrowsWithTypeMismatch", testDecodableThrowsWithTypeMismatch),
    ]
}

extension MultiLineString_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultiLineString_GEOSTests = [
        ("testInitFromWrongGEOSType", testInitFromWrongGEOSType),
        ("testRoundtripToGEOS", testRoundtripToGEOS),
    ]
}

extension MultiPointTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultiPointTests = [
        ("testInitWithPoints", testInitWithPoints),
    ]
}

extension MultiPoint_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultiPoint_CodableTests = [
        ("testCodable", testCodable),
        ("testDecodableThrowsWithInvalidType", testDecodableThrowsWithInvalidType),
        ("testDecodableThrowsWithTypeMismatch", testDecodableThrowsWithTypeMismatch),
    ]
}

extension MultiPoint_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultiPoint_GEOSTests = [
        ("testInitFromWrongGEOSType", testInitFromWrongGEOSType),
        ("testRoundtripToGEOS", testRoundtripToGEOS),
    ]
}

extension MultiPolygonTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultiPolygonTests = [
        ("testInitWithLineStrings", testInitWithLineStrings),
    ]
}

extension MultiPolygon_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultiPolygon_CodableTests = [
        ("testCodable", testCodable),
        ("testDecodableThrowsWithInvalidType", testDecodableThrowsWithInvalidType),
        ("testDecodableThrowsWithTypeMismatch", testDecodableThrowsWithTypeMismatch),
    ]
}

extension MultiPolygon_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultiPolygon_GEOSTests = [
        ("testInitFromWrongGEOSType", testInitFromWrongGEOSType),
        ("testRoundtripToGEOS", testRoundtripToGEOS),
    ]
}

extension PointTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PointTests = [
        ("testInitWithLonLat", testInitWithLonLat),
    ]
}

extension Point_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Point_CodableTests = [
        ("testCodable", testCodable),
        ("testDecodableThrowsWithInvalidType", testDecodableThrowsWithInvalidType),
        ("testDecodableThrowsWithLessThanTwoValues", testDecodableThrowsWithLessThanTwoValues),
        ("testDecodableThrowsWithTypeMismatch", testDecodableThrowsWithTypeMismatch),
    ]
}

extension Point_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Point_GEOSTests = [
        ("testInitFromWrongGEOSType", testInitFromWrongGEOSType),
        ("testRoundtripToGEOS", testRoundtripToGEOS),
    ]
}

extension PolygonTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PolygonTests = [
        ("testInitWithExteriorAndHoles", testInitWithExteriorAndHoles),
        ("testInitWithExteriorOnly", testInitWithExteriorOnly),
    ]
}

extension Polygon_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Polygon_CodableTests = [
        ("testCodableWithHole", testCodableWithHole),
        ("testCodableWithoutHoles", testCodableWithoutHoles),
        ("testDecodableThrowsWithInvalidType", testDecodableThrowsWithInvalidType),
        ("testDecodableThrowsWithTypeMismatch", testDecodableThrowsWithTypeMismatch),
        ("testDecodingPolygonWithTooFewRings", testDecodingPolygonWithTooFewRings),
    ]
}

extension Polygon_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Polygon_GEOSTests = [
        ("testInitFromWrongGEOSType", testInitFromWrongGEOSType),
        ("testRoundtripToGEOS", testRoundtripToGEOS),
    ]
}

extension Polygon_LinearRingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Polygon_LinearRingTests = [
        ("testInitSuccess", testInitSuccess),
        ("testInitWithTooFewPoints", testInitWithTooFewPoints),
        ("testInitWithUnclosedRing", testInitWithUnclosedRing),
    ]
}

extension Polygon_LinearRing_GEOSTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Polygon_LinearRing_GEOSTests = [
        ("testInitFromWrongGEOSType", testInitFromWrongGEOSType),
        ("testRoundtripToGEOS", testRoundtripToGEOS),
    ]
}

extension WKBTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WKBTests = [
        ("testGeometryRoundtripToWKB", testGeometryRoundtripToWKB),
        ("testGeometryTypesRoundtripToWKB", testGeometryTypesRoundtripToWKB),
        ("testInitWithEmptyWKB", testInitWithEmptyWKB),
        ("testInitWithInvalidWKB", testInitWithInvalidWKB),
        ("testLinearRingRoundtripToWKB", testLinearRingRoundtripToWKB),
    ]
}

extension WKTTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WKTTests = [
        ("testGeometryRoundtripToWKT", testGeometryRoundtripToWKT),
        ("testGeometryTypesRoundtripToWKT", testGeometryTypesRoundtripToWKT),
        ("testInitWithEmptyWKT", testInitWithEmptyWKT),
        ("testInitWithInvalidWKT", testInitWithInvalidWKT),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BoundableTests.__allTests__BoundableTests),
        testCase(EnvelopeTests.__allTests__EnvelopeTests),
        testCase(FeatureCollectionTests.__allTests__FeatureCollectionTests),
        testCase(FeatureCollection_CodableTests.__allTests__FeatureCollection_CodableTests),
        testCase(FeatureTests.__allTests__FeatureTests),
        testCase(Feature_CodableTests.__allTests__Feature_CodableTests),
        testCase(Feature_FeatureIdTests.__allTests__Feature_FeatureIdTests),
        testCase(GEOSContextTests.__allTests__GEOSContextTests),
        testCase(GEOSObjectTests.__allTests__GEOSObjectTests),
        testCase(GeoJSON_CodableTests.__allTests__GeoJSON_CodableTests),
        testCase(GeometryCollectionTests.__allTests__GeometryCollectionTests),
        testCase(GeometryCollection_CodableTests.__allTests__GeometryCollection_CodableTests),
        testCase(GeometryCollection_GEOSTests.__allTests__GeometryCollection_GEOSTests),
        testCase(GeometryConvertibleTests.__allTests__GeometryConvertibleTests),
        testCase(GeometryConvertible_GEOSTests.__allTests__GeometryConvertible_GEOSTests),
        testCase(Geometry_CodableTests.__allTests__Geometry_CodableTests),
        testCase(Geometry_GEOSTests.__allTests__Geometry_GEOSTests),
        testCase(JSONTests.__allTests__JSONTests),
        testCase(JSON_CodableTests.__allTests__JSON_CodableTests),
        testCase(LineStringConvertibleTests.__allTests__LineStringConvertibleTests),
        testCase(LineStringConvertible_GEOSTests.__allTests__LineStringConvertible_GEOSTests),
        testCase(LineStringTests.__allTests__LineStringTests),
        testCase(LineString_CodableTests.__allTests__LineString_CodableTests),
        testCase(LineString_GEOSTests.__allTests__LineString_GEOSTests),
        testCase(MultiLineStringTests.__allTests__MultiLineStringTests),
        testCase(MultiLineString_CodableTests.__allTests__MultiLineString_CodableTests),
        testCase(MultiLineString_GEOSTests.__allTests__MultiLineString_GEOSTests),
        testCase(MultiPointTests.__allTests__MultiPointTests),
        testCase(MultiPoint_CodableTests.__allTests__MultiPoint_CodableTests),
        testCase(MultiPoint_GEOSTests.__allTests__MultiPoint_GEOSTests),
        testCase(MultiPolygonTests.__allTests__MultiPolygonTests),
        testCase(MultiPolygon_CodableTests.__allTests__MultiPolygon_CodableTests),
        testCase(MultiPolygon_GEOSTests.__allTests__MultiPolygon_GEOSTests),
        testCase(PointTests.__allTests__PointTests),
        testCase(Point_CodableTests.__allTests__Point_CodableTests),
        testCase(Point_GEOSTests.__allTests__Point_GEOSTests),
        testCase(PolygonTests.__allTests__PolygonTests),
        testCase(Polygon_CodableTests.__allTests__Polygon_CodableTests),
        testCase(Polygon_GEOSTests.__allTests__Polygon_GEOSTests),
        testCase(Polygon_LinearRingTests.__allTests__Polygon_LinearRingTests),
        testCase(Polygon_LinearRing_GEOSTests.__allTests__Polygon_LinearRing_GEOSTests),
        testCase(WKBTests.__allTests__WKBTests),
        testCase(WKTTests.__allTests__WKTTests),
    ]
}
#endif
